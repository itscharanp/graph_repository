package practice3;
import java.util.*;
public class Practice3 
{ 
     static class Graph
     {
         private int vertices;
         private LinkedList<Integer> adj[];   
         Graph(int v)
         {
           vertices = v;
           adj = new LinkedList[v];
           for(int i=0;i<vertices;++i)
           {
               adj[i] = new LinkedList<>(); 
           }
         }
         
         void addEdge(int v,int w)
         {
             adj[v].add(w);
         }
        
         void BFS(int snode)
         {
             boolean visited[] = new boolean[vertices];
             LinkedList<Integer> qu = new LinkedList<>(); 
             
             visited[snode] = true;
             qu.add(snode);
             
             while(qu.size() != 0)
             {
                 snode = qu.poll();
                 System.out.print(snode+" ");
                 Iterator<Integer> i = adj[snode].listIterator();
                 while(i.hasNext())
                 {
                     int n = i.next();
                     if(!visited[n])
                     {
                         visited[n] = true;
                         qu.add(n);
                     }
                 }
                 
             }
             
             
             
         }       
     }        
    
    

    public static void main(String[] args) 
    {
       Scanner in = new Scanner(System.in);
       System.out.println("Enter the number of vertices");
       int nv = in.nextInt();
       Graph gh = new Graph(nv);
       System.out.println("Enter the number of edges");
       int edges = in.nextInt();
       for(int i=0;i<edges;i++)
       {
           int v = in.nextInt();
           int ev = in.nextInt();
           gh.addEdge(v, ev);
       } 
       gh.BFS(2);
    }
}

-------------------------
*************************
# output
run:
Enter the number of vertices
4
Enter the number of edges
6
0 1
0 2
1 2
2 0
2 3
3 3
2 0 3 1 BUILD SUCCESSFUL (total time: 21 seconds)



